% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pairwise_rf.R
\name{est_pairwise_rf}
\alias{est_pairwise_rf}
\alias{print.poly.est.two.pts.pairwise}
\alias{plot.poly.est.two.pts.pairwise}
\title{Pairwise two-point analysis}
\usage{
est_pairwise_rf(
  input.seq,
  count.cache,
  n.clusters = 1,
  mrk.pairs = NULL,
  n.batches = 1,
  verbose = TRUE,
  memory.warning = FALSE,
  parallelization.type = c("PSOCK", "FORK"),
  tol = .Machine$double.eps^0.25
)

\method{print}{poly.est.two.pts.pairwise}(x, ...)

\method{plot}{poly.est.two.pts.pairwise}(x, first.mrk, second.mrk, ...)
}
\arguments{
\item{input.seq}{an object of class \code{mappoly.sequence}}

\item{count.cache}{an object of class \code{cache.info} containing
pre-computed genotype frequencies, obtained with
\code{\link[mappoly]{cache_counts_twopt}}}

\item{n.clusters}{Number of parallel processes (cores) to spawn (default = 1)}

\item{mrk.pairs}{a matrix of dimensions 2*N, containing N
pairs of markers to be analyzed. If \code{NULL} (default), all pairs are
considered}

\item{n.batches}{The number of batches of marker pairs that should be analyzed 
in parallel.}

\item{verbose}{If \code{TRUE} (default), current progress is shown; if
\code{FALSE}, no output is produced}

\item{memory.warning}{if \code{TRUE}, prints a memory warning if the 
number of markers is greater than 2000. Mostly for internal use}

\item{parallelization.type}{one of the supported cluster types. This should 
be either PSOCK (default) or FORK.}

\item{tol}{the desired accuracy. See \code{optimize()} for details}
}
\value{
An object of class \code{poly.est.two.pts.pairwise} which
    is a list  containing the following components:
    \item{data.name}{name of the object of class
        \code{mappoly.data} with the raw data}
    \item{n.mrk}{number of markers in the sequence}
    \item{seq.num}{a \code{vector} containing the (ordered) indices
        of markers inthe sequence, according to the input file}
    \item{pairwise}{a list of size
    \code{choose(length(input.seq$seq.num), 2)}, each of them containing: a matrix
    with the linkage phase configuration i.e. the number of
    homologous that share alelels; the LOD Score relative to each
    one of these configurations; the recombination fraction
    estimated for each configuration; and their associated LOD
    score}
    \code{chisq.pval.thres}{threshold used to perform the segregation tests}
    \code{chisq.pval}{p-values associated with the performed segregation tests}
}
\description{
Performs the two-point pairwise analysis, accounting for the recombination fractions
between all pairwise markers given one or more linkage phase configurations.
}
\examples{
  \dontrun{
  ## Tetraploid example: 
  all.mrk <- make_seq_mappoly(tetra.solcap, 'all')
  red.mrk <- elim_redundant(all.mrk)
  unique.mrks <- make_seq_mappoly(red.mrk)
  counts <- cache_counts_twopt(unique.mrks, cached = TRUE)
  # will take ~ 13 min
  all.pairs <- est_pairwise_rf(input.seq = unique.mrks,
                               count.cache = counts,
                               n.clusters = 7, 
                               verbose=TRUE)
   all.pairs
   plot(all.pairs, 90, 91)
   mat <- rf_list_to_matrix(all.pairs)
   plot(mat)
   
   ## Hexaploid example
   fl = "https://github.com/mmollina/MAPpoly_vignettes/raw/master/data/BT/sweetpotato_chr1.vcf.gz"
   tempfl <- tempfile(pattern = 'chr1_', fileext = '.vcf.gz')
   download.file(fl, destfile = tempfl)
   dat.dose.vcf = read_vcf(file = tempfl, parent.1 = "PARENT1", parent.2 = "PARENT2")
   
   ## Filtering dataset by marker
   dat.filt.mrk <- filter_missing(input.data = dat.dose.vcf, 
                                  type = "marker", 
                                  filter.thres = 0.10, 
                                  inter = FALSE)
   ## Filtering dataset by individual
   dat.filt.ind <- filter_missing(input.data = dat.filt.mrk, 
                                  type = "individual", 
                                  filter.thres = 0.10, 
                                  inter = FALSE)
  ## Segregation test
  pval.bonf <- 0.05/dat.filt.ind$n.mrk
  mrks.chi.filt <- filter_segregation(dat.filt.ind,
                                      chisq.pval.thres =  pval.bonf, 
                                      inter = FALSE)
  seq.ch1<-make_seq_mappoly(mrks.chi.filt)
  plot(seq.ch1)
  counts <- cache_counts_twopt(seq.ch1, cached = TRUE)
  ## will take ~  19 min / peak of memory usage ~ 10GB
  all.pairs.1 <- est_pairwise_rf(input.seq = seq.ch1,
                                 count.cache = counts,
                                 n.clusters = 7, 
                                 verbose=TRUE)
  ## same thing, but it will take ~  21 min / peak of memory usage ~ 6GB
  all.pairs.2 <- est_pairwise_rf(input.seq = seq.ch1,
                                 count.cache = counts,
                                 n.clusters = 7, 
                                 n.batch = 10,
                                 verbose=TRUE)   
   plot(all.pairs, 90, 91)
   mat <- rf_list_to_matrix(all.pairs.1)
   plot(mat)
   }
   
}
\references{
Mollinari, M., and Garcia, A.  A. F. (2019) Linkage
    analysis and haplotype phasing in experimental autopolyploid
    populations with high ploidy level using hidden Markov
    models, _G3: Genes, Genomes, Genetics_. 
    \url{https://doi.org/10.1534/g3.119.400378}
}
\author{
Marcelo Mollinari, \email{mmollin@ncsu.edu}
}
\keyword{internal}
